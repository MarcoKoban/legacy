name: Golden Master Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  golden-master-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('geneweb_python/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        cd geneweb_python
        pip install -r requirements.txt
        pip install pytest pytest-cov

    - name: Run Golden Master Tests
      working-directory: golden_master
      run: |
        echo "╔════════════════════════════════════════════════════════════════╗"
        echo "║     🧪 Golden Master Testing Suite - Python vs OCaml         ║"
        echo "╚════════════════════════════════════════════════════════════════╝"
        echo ""
        
        # Créer les répertoires de sortie
        mkdir -p outputs_python
        mkdir -p reports
        
        # Exécuter les tests Python
        echo "🐍 Running Python tests..."
        python3 run_python_tests_simple.py
        
        # Comparer avec les sorties OCaml de référence
        echo ""
        echo "🔍 Comparing with OCaml reference outputs..."
        python3 compare_ocaml_python.py
        
        RESULT=$?
        
        echo ""
        if [ $RESULT -eq 0 ]; then
          echo "✅ All Golden Master tests passed!"
        else
          echo "❌ Some Golden Master tests failed!"
        fi
        
        exit $RESULT

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: golden-master-results
        path: |
          golden_master/outputs_python/
          golden_master/reports/
        retention-days: 30

    - name: Comment PR with results
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          // Lire le résumé s'il existe
          const summaryPath = path.join(process.env.GITHUB_WORKSPACE, 'golden_master/reports/SUMMARY.md');
          let summary = '## 🧪 Golden Master Test Results\n\n';
          
          if (fs.existsSync(summaryPath)) {
            summary += fs.readFileSync(summaryPath, 'utf8');
          } else {
            summary += '⚠️ No summary file generated. Check the workflow logs for details.';
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: summary
          });

    - name: Create status badge
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      run: |
        # Vous pouvez générer un badge personnalisé ici si nécessaire
        echo "Badge status would be generated here"