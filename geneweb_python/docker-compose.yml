version: '3.8'

services:
  geneweb-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "8443:8000"  # Map to 8443 for HTTPS
    environment:
      # Application settings
      - GENEWEB_API_HOST=0.0.0.0
      - GENEWEB_API_PORT=8000
      - GENEWEB_API_WORKERS=4
      - GENEWEB_API_DEBUG=false
      
      # Security settings
      - GENEWEB_SECURITY_FORCE_HTTPS=true
      - GENEWEB_SECURITY_HSTS_MAX_AGE=31536000
      - GENEWEB_SECURITY_RATE_LIMIT_PER_MINUTE=100
      
      # SSL certificates (mount as volumes)
      - GENEWEB_API_SSL_CERTFILE=/etc/geneweb/ssl/cert.pem
      - GENEWEB_API_SSL_KEYFILE=/etc/geneweb/ssl/key.pem
      
      # Secrets (use Docker secrets in production)
      - GENEWEB_SECURITY_SECRET_KEY=${GENEWEB_SECRET_KEY}
      - GENEWEB_SECURITY_ENCRYPTION_KEY=${GENEWEB_ENCRYPTION_KEY}
      
      # Database
      - GENEWEB_DB_DATABASE_URL=postgresql://geneweb:${POSTGRES_PASSWORD}@postgres:5432/geneweb
      
      # Logging
      - GENEWEB_LOG_LOG_LEVEL=INFO
      - GENEWEB_LOG_LOG_FORMAT=json
      - GENEWEB_LOG_LOG_FILE=/var/log/geneweb/api.log
      
      # Monitoring
      - GENEWEB_MONITORING_ENABLE_METRICS=true
    
    volumes:
      # SSL certificates
      - ./ssl:/etc/geneweb/ssl:ro
      # Logs
      - geneweb-logs:/var/log/geneweb
    
    networks:
      - geneweb-network
    
    restart: unless-stopped
    
    # Security options
    security_opt:
      - no-new-privileges:true
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 256M
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=geneweb
      - POSTGRES_USER=geneweb
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro
    networks:
      - geneweb-network
    restart: unless-stopped
    
    # Security options
    security_opt:
      - no-new-privileges:true
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    networks:
      - geneweb-network
    restart: unless-stopped
    
    # Security options
    security_opt:
      - no-new-privileges:true
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 64M

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - geneweb-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - geneweb-network
    restart: unless-stopped

networks:
  geneweb-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres-data:
  redis-data:
  geneweb-logs:
  prometheus-data:
  grafana-data: